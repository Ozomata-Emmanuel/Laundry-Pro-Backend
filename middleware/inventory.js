import InventoryModel from '../models/InventoryModel.js';
import SupplierOrderModel from '../models/SupplierOrderModel.js';

export const checkStockLevels = async (inventoryId, quantityUsed) => {
  const item = await InventoryModel.findById(inventoryId);
  
  if (!item) throw new Error('Inventory item not found');
  
  item.currentStock -= quantityUsed;
  
  if (item.currentStock <= item.reorderLevel) {
    await autoCreateSupplierRequest(item);
  }
  
  item.status = calculateStatus(item.currentStock, item.reorderLevel);
  await item.save();
};

const autoCreateSupplierRequest = async (item) => {
  const quantityNeeded = item.reorderLevel * 3;
  
  await SupplierOrderModel.create({
    inventoryItem: item._id,
    quantity: quantityNeeded,
    status: 'approved', 
    autoGenerated: true,
    expectedDelivery: new Date(Date.now() + 24 * 60 * 60 * 1000) 
  });
  
};